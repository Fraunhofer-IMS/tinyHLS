name: 'tinyHLS-test-sim'

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tb/**'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tb/**'
  workflow_dispatch:

jobs:
  Check:
    runs-on: ubuntu-latest
    name: 'tiny HLS Test/Verification Script'

    steps:
      - name: 'üìÇ Repository Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: 'Install Conda'
        uses: conda-incubator/setup-miniconda@v2
        with: 
          activate-environment: anaconda-client-env
          environment-file: environment.yml
          auto-activate-base: false

      - name: '‚öôÔ∏è testing tinyHLS'
        run: |
          echo "Running tinyHLS..."
          conda init 
          source ~/.bashrc
          conda env create -f environment.yml
          source ~/.bashrc
          conda activate tinyHLS
          python3 test.py
          echo "...Done running tinyHLS"

      - name: 'üì¶ Install Icarus Verilog'
        run: |
          wget https://github.com/stnolting/icarus-verilog-prebuilt/releases/download/v1.0.0/iverilog-27082022.tar.gz
          mkdir $GITHUB_WORKSPACE/iverilog-27082022.tmp
          tar -xzf iverilog-27082022.tar.gz -C $GITHUB_WORKSPACE/iverilog-27082022.tmp/

      - name: '‚öôÔ∏è Update PATH Variable'
        run: echo "$GITHUB_WORKSPACE/iverilog-27082022.tmp/bin" >> $GITHUB_PATH

      - name: 'üöÄ Run Verification Script'
        run: /bin/bash -c "chmod u+x $GITHUB_WORKSPACE/.github/check.sh && $GITHUB_WORKSPACE/.github/check.sh"


      - name: 'üì§ Archive Outputs'
        uses: actions/upload-artifact@v3
        with:
          name: outputs
          path: output/*
          

  tinyhls-docs: 
    runs-on: ubuntu-latest
    name: 'Generate Documentation'
    
    steps: 
      - name: 'Repository Checkout'
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0 
          submodules: recursive
          
      - name: 'Install Asciidoctor and Asciidoctor-PDF'
        run: |
          sudo apt-get update 
          sudo apt-get install -y asciidoctor
          sudo gem install asciidoctor-pdf
          
      - name: 'Generate PDF'
        run: |
          cd docs
          make pdf
          
      - name: 'Generate HTML'
        run: |
          cd docs 
          make html
          
      - name: 'Upload Documentation Artifacts'
        uses: actions/upload-artifact@v3
        with: 
          name: documentation
          path: |
            docs/public/pdf/tinyHLS.pdf
            docs/public/index.html
            
      - name: 'üêç Install doit'
        run: pip install doit

      - name: 'üöÄ Deploy to GitHub-Pages'
        run: |
          chmod +x ./docs/do.py
          ./docs/do.py DeployToGitHubPages "update ${{ github.sha }}"-
